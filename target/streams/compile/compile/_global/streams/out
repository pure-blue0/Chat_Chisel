[0m[[0m[31merror[0m] [0m[0m/home/ysyx/Project/chisel_gen/src/main/scala/core.scala:44:14: value mret_in is not a member of chisel3.Bundle{val csr_read: chisel3.Bool; val csr_write: chisel3.Bool; val csr_address: chisel3.UInt; val ecause_in: chisel3.UInt; val exception_in: chisel3.Bool; val mert_in: chisel3.Bool; val wfi_in: chisel3.Bool; val ex_pc: chisel3.UInt; val aluop: chisel3.UInt; val immsrc: chisel3.Bool; val isbranch: chisel3.Bool; val memread: chisel3.Bool; val memwrite: chisel3.Bool; val regwrite: chisel3.Bool; val memtoreg: chisel3.UInt; val pcsel: chisel3.Bool; val rdsel: chisel3.Bool; val isjump: chisel3.Bool; val islui: chisel3.Bool; val rs1_data: chisel3.UInt; val rs2_data: chisel3.UInt; val imm: chisel3.UInt; val funct3: chisel3.UInt; val ex_rs1: chisel3.UInt; val ex_rd: chisel3.UInt; val mem_pc: chisel3.UInt; val target_pc: chisel3.UInt; val csr_read_data: chisel3.UInt; val readable: chisel3.Bool; val writeable: chisel3.Bool; val csr_read_data_out: chisel3.UInt; val csr_write_enable_out: chisel3.Bool; val csr_write_address_out: chisel3.UInt; val csr_write_data_out: chisel3.UInt; val ecause_out: chisel3.UInt; val exception_out: chisel3.Bool; val mert_out: chisel3.Bool; val wfi_out: chisel3.Bool; val reg_pc: chisel3.UInt; val mem_isbranch: chisel3.Bool; val mem_isjump: chisel3.Bool; val mem_memread: chisel3.Bool; val mem_memwrite: chisel3.Bool; val mem_regwrite: chisel3.Bool; val mem_memtoreg: chisel3.UInt; val mem_zero: chisel3.Bool; val mem_aluresult: chisel3.UInt; val mem_rs2_data: chisel3.UInt; val mem_funct3: chisel3.UInt; val mem_rd: chisel3.UInt; val writedata: chisel3.UInt; val forward1: chisel3.UInt; val forward2: chisel3.UInt; val ex_mem_flush: chisel3.Bool}[0m
[0m[[0m[31merror[0m] [0m[0m  execute.io.mret_in := decode.io.mret_out[0m
[0m[[0m[31merror[0m] [0m[0m             ^[0m
[0m[[0m[31merror[0m] [0m[0m/home/ysyx/Project/chisel_gen/src/main/scala/core.scala:78:35: value mret_out is not a member of chisel3.Bundle{val csr_read: chisel3.Bool; val csr_write: chisel3.Bool; val csr_address: chisel3.UInt; val ecause_in: chisel3.UInt; val exception_in: chisel3.Bool; val mert_in: chisel3.Bool; val wfi_in: chisel3.Bool; val ex_pc: chisel3.UInt; val aluop: chisel3.UInt; val immsrc: chisel3.Bool; val isbranch: chisel3.Bool; val memread: chisel3.Bool; val memwrite: chisel3.Bool; val regwrite: chisel3.Bool; val memtoreg: chisel3.UInt; val pcsel: chisel3.Bool; val rdsel: chisel3.Bool; val isjump: chisel3.Bool; val islui: chisel3.Bool; val rs1_data: chisel3.UInt; val rs2_data: chisel3.UInt; val imm: chisel3.UInt; val funct3: chisel3.UInt; val ex_rs1: chisel3.UInt; val ex_rd: chisel3.UInt; val mem_pc: chisel3.UInt; val target_pc: chisel3.UInt; val csr_read_data: chisel3.UInt; val readable: chisel3.Bool; val writeable: chisel3.Bool; val csr_read_data_out: chisel3.UInt; val csr_write_enable_out: chisel3.Bool; val csr_write_address_out: chisel3.UInt; val csr_write_data_out: chisel3.UInt; val ecause_out: chisel3.UInt; val exception_out: chisel3.Bool; val mert_out: chisel3.Bool; val wfi_out: chisel3.Bool; val reg_pc: chisel3.UInt; val mem_isbranch: chisel3.Bool; val mem_isjump: chisel3.Bool; val mem_memread: chisel3.Bool; val mem_memwrite: chisel3.Bool; val mem_regwrite: chisel3.Bool; val mem_memtoreg: chisel3.UInt; val mem_zero: chisel3.Bool; val mem_aluresult: chisel3.UInt; val mem_rs2_data: chisel3.UInt; val mem_funct3: chisel3.UInt; val mem_rd: chisel3.UInt; val writedata: chisel3.UInt; val forward1: chisel3.UInt; val forward2: chisel3.UInt; val ex_mem_flush: chisel3.Bool}[0m
[0m[[0m[31merror[0m] [0m[0m  memory.io.mret_in := execute.io.mret_out[0m
[0m[[0m[31merror[0m] [0m[0m                                  ^[0m
[0m[[0m[31merror[0m] [0m[0mtwo errors found[0m
